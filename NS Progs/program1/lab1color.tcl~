# Create a new simulator

set ns [new Simulator]

# define color 
$ns color 1 Blue
$ns color 2 Red

# Open file for nam, and attach file to nam-trace-all
set nf [open lab1.nam w]
$ns namtrace-all $nf

# Open file for Statestics - to count drop packets and attach to trace-all
set nt [open lab1.tr w]
$ns trace-all $nt

# call this procedure when ns stops simulation
proc finish { } {

	global ns nf nt
	$ns flush-trace

	close $nf
	close $nt

	exec nam lab1.nam &
	exec cat lab1.tr | awk -f lab1.awk
	exit 0
}

# create required number of nodes
set n0 [ $ns node]
set n1 [ $ns node]
set n2 [ $ns node]

# display the lable to nodes
$n0 label "source1"
$n1 label  "source2"  


# create physical link: type source_node destnation_node band_width propagation_delay congestion_control
$ns duplex-link $n0 $n2 20Mb 15ms DropTail
$ns duplex-link $n1 $n2 1Mb 15ms DropTail


$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n2 orient right-up

# node <--- agent  <--- source
# Agent: UDP, TCP...
# Source: CBR, ...

# Create required number ofAgent
set udp0 [new Agent/UDP]
$ns attach-agent $n0 $udp0

set udp1 [new Agent/UDP]
$ns attach-agent $n1 $udp1

#Create Destination Node or receiver: Null 

set null0 [new Agent/Null]
$ns attach-agent $n2 $null0


#Define buffer size
$ns set queue-limit $n0 $n2 10
$ns set queue-limit $n1 $n2  5

#create Source and set packet_size, and time interval between the packets
# atach the source to agent
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize_ 500
$cbr0 set interval_ 0.005
$cbr0 attach-agent $udp0


set cbr1 [new Application/Traffic/CBR]
$cbr1 set packetSize_ 1000
$cbr1 set interval_ 0.005
$cbr1 attach-agent $udp1

# Sepcify the source and destination for actual communication
$ns connect $udp0 $null0
$udp0 set fid_ 1

$ns connect $udp1 $null0
$udp1 set fid_ 2


# Define similation timings
$ns at 0.1 "$cbr0 start"
$ns at 0.2 "$cbr1 start"
$ns at 2.5 "$cbr0 stop"
$ns at 2.8 "$cbr1 stop"

# define termination time
$ns at 3.0 "finish"

# with the above nodes, link, souce, agents, timings ... start the simulation
$ns run
